{"version":3,"sources":["webpack://printJS/webpack/universalModuleDefinition","webpack://printJS/webpack/bootstrap","webpack://printJS/./src/js/browser.js","webpack://printJS/./src/js/modal.js","webpack://printJS/./src/js/functions.js","webpack://printJS/./src/js/print.js","webpack://printJS/./src/js/pdf.js","webpack://printJS/./src/js/html.js","webpack://printJS/./src/js/raw-html.js","webpack://printJS/./src/js/image.js","webpack://printJS/./src/js/json.js","webpack://printJS/./src/js/init.js","webpack://printJS/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Browser","isFirefox","InstallTrigger","isIE","navigator","userAgent","indexOf","document","documentMode","isEdge","StyleMedia","isChrome","context","chrome","isSafari","toString","HTMLElement","toLowerCase","isIOSChrome","Modal","show","params","printModal","createElement","setAttribute","contentDiv","closeButton","appendChild","spinner","messageNode","createTextNode","modalMessage","getElementsByTagName","getElementById","addEventListener","close","printFrame","parentNode","removeChild","collectStyles","element","win","defaultView","elementStyle","styles","getComputedStyle","keys","map","targetStyles","targetStyle","length","targetStylesMatch","getPropertyValue","maxWidth","font_size","addHeader","printElement","raw","headerContainer","header","RegExp","test","innerHTML","headerElement","headerNode","headerStyle","insertBefore","childNodes","cleanUp","showModal","onLoadingEnd","onLoadingStart","URL","revokeObjectURL","printable","onPrintDialogClose","event","handler","removeEventListener","performPrint","iframeElement","focus","contentWindow","execCommand","e","print","error","onError","Print","send","frameId","onload","type","printDocument","contentDocument","body","printableElement","onHtmlLoad","style","head","images","promises","image","src","location","href","Promise","resolve","pollImage","naturalWidth","complete","setTimeout","loadIframeImage","all","loadIframeImages","then","base64","bytesArray","Uint8Array","from","atob","charCodeAt","createBlobAndPrint","origin","charAt","req","XMLHttpRequest","responseType","status","statusText","response","open","data","localPdf","Blob","createObjectURL","cloneElement","clone","cloneNode","childNodesArray","Array","slice","ignoreElements","id","clonedChild","scanStyles","nodeType","tagName","getContext","drawImage","console","constructor","forEach","img","imageStyle","imageWrapper","Error","repeatTableHeader","properties","isArray","field","displayName","columnSize","htmlData","a","gridHeaderStyle","obj","toUpperCase","stringData","split","gridStyle","jsonToHTML","printTypes","printJS","fallbackPrintable","font","honorMarginPadding","honorColor","onPdfOpen","onBrowserIncompatible","documentTitle","css","args","arguments","undefined","encodeURI","k","usedFrame","srcdoc","file","info","Pdf","Image","Html","RawHtml","Json"],"mappings":"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","file":"print.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"printJS\"] = factory();\n\telse\n\t\troot[\"printJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Browser = {\r\n  // Firefox 1.0+\r\n  isFirefox: () => {\r\n    return typeof InstallTrigger !== 'undefined'\r\n  },\r\n  // Internet Explorer 6-11\r\n  isIE: () => {\r\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\r\n  },\r\n  // Edge 20+\r\n  isEdge: () => {\r\n    return !Browser.isIE() && !!window.StyleMedia\r\n  },\r\n  // Chrome 1+\r\n  isChrome: (context = window) => {\r\n    return !!context.chrome\r\n  },\r\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\r\n  isSafari: () => {\r\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\r\n        navigator.userAgent.toLowerCase().indexOf('safari') !== -1\r\n  },\r\n  // IOS Chrome\r\n  isIOSChrome: () => {\r\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\r\n  }\r\n}\r\n\r\nexport default Browser\r\n","const Modal = {\r\n  show (params) {\r\n    // Build modal\r\n    let modalStyle = 'font-family:sans-serif; ' +\r\n        'display:table; ' +\r\n        'text-align:center; ' +\r\n        'font-weight:300; ' +\r\n        'font-size:30px; ' +\r\n        'left:0; top:0;' +\r\n        'position:fixed; ' +\r\n        'z-index: 9990;' +\r\n        'color: #0460B5; ' +\r\n        'width: 100%; ' +\r\n        'height: 100%; ' +\r\n        'background-color:rgba(255,255,255,.9);' +\r\n        'transition: opacity .3s ease;'\r\n\r\n    // Create wrapper\r\n    let printModal = document.createElement('div')\r\n    printModal.setAttribute('style', modalStyle)\r\n    printModal.setAttribute('id', 'printJS-Modal')\r\n\r\n    // Create content div\r\n    let contentDiv = document.createElement('div')\r\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;')\r\n\r\n    // Add close button (requires print.css)\r\n    let closeButton = document.createElement('div')\r\n    closeButton.setAttribute('class', 'printClose')\r\n    closeButton.setAttribute('id', 'printClose')\r\n    contentDiv.appendChild(closeButton)\r\n\r\n    // Add spinner (requires print.css)\r\n    let spinner = document.createElement('span')\r\n    spinner.setAttribute('class', 'printSpinner')\r\n    contentDiv.appendChild(spinner)\r\n\r\n    // Add message\r\n    let messageNode = document.createTextNode(params.modalMessage)\r\n    contentDiv.appendChild(messageNode)\r\n\r\n    // Add contentDiv to printModal\r\n    printModal.appendChild(contentDiv)\r\n\r\n    // Append print modal element to document body\r\n    document.getElementsByTagName('body')[0].appendChild(printModal)\r\n\r\n    // Add event listener to close button\r\n    document.getElementById('printClose').addEventListener('click', function () {\r\n      Modal.close()\r\n    })\r\n  },\r\n  close () {\r\n    let printFrame = document.getElementById('printJS-Modal')\r\n\r\n    printFrame.parentNode.removeChild(printFrame)\r\n  }\r\n}\r\n\r\nexport default Modal\r\n","import Modal from './modal'\r\nimport Browser from './browser'\r\n\r\nexport function addWrapper (htmlData, params) {\r\n  let bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;'\r\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>'\r\n}\r\n\r\nexport function capitalizePrint (obj) {\r\n  return obj.charAt(0).toUpperCase() + obj.slice(1)\r\n}\r\n\r\nexport function collectStyles (element, params) {\r\n  let win = document.defaultView || window\r\n\r\n  // String variable to hold styling for each element\r\n  let elementStyle = ''\r\n\r\n  // Loop over computed styles\r\n  let styles = win.getComputedStyle(element, '')\r\n\r\n  Object.keys(styles).map(key => {\r\n    // Check if style should be processed\r\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\r\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';'\r\n    }\r\n  })\r\n\r\n  // Print friendly defaults (deprecated)\r\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important;' + params.font_size + ' !important;'\r\n\r\n  return elementStyle\r\n}\r\n\r\nfunction targetStylesMatch (styles, value) {\r\n  for (let i = 0; i < styles.length; i++) {\r\n    if (typeof value === 'object' && value.indexOf(styles[i]) !== -1) return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function addHeader (printElement, params) {\r\n  // Create the header container div\r\n  let headerContainer = document.createElement('div')\r\n\r\n  // Check if the header is text or raw html\r\n  if (isRawHTML(params.header)) {\r\n    headerContainer.innerHTML = params.header\r\n  } else {\r\n    // Create header element\r\n    let headerElement = document.createElement('h1')\r\n\r\n    // Create header text node\r\n    let headerNode = document.createTextNode(params.header)\r\n\r\n    // Build and style\r\n    headerElement.appendChild(headerNode)\r\n    headerElement.setAttribute('style', params.headerStyle)\r\n    headerContainer.appendChild(headerElement)\r\n  }\r\n\r\n  printElement.insertBefore(headerContainer, printElement.childNodes[0])\r\n}\r\n\r\nexport function cleanUp (params) {\r\n  // If we are showing a feedback message to user, remove it\r\n  if (params.showModal) Modal.close()\r\n\r\n  // Check for a finished loading hook function\r\n  if (params.onLoadingEnd) params.onLoadingEnd()\r\n\r\n  // If preloading pdf files, clean blob url\r\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable)\r\n\r\n  // If a onPrintDialogClose callback is given, execute it\r\n  if (params.onPrintDialogClose) {\r\n    let event = 'mouseover'\r\n\r\n    if (Browser.isChrome() || Browser.isFirefox()) {\r\n      // Ps.: Firefox will require an extra click in the document to fire the focus event.\r\n      event = 'focus'\r\n    }\r\n    const handler = () => {\r\n      // Make sure the event only happens once.\r\n      window.removeEventListener(event, handler)\r\n\r\n      params.onPrintDialogClose()\r\n    }\r\n\r\n    window.addEventListener(event, handler)\r\n  }\r\n}\r\n\r\nexport function isRawHTML (raw) {\r\n  let regexHtml = new RegExp('<([A-Za-z][A-Za-z0-9]*)\\\\b[^>]*>(.*?)</\\\\1>')\r\n  return regexHtml.test(raw)\r\n}\r\n","import Browser from './browser'\r\nimport { cleanUp } from './functions'\r\n\r\nconst Print = {\r\n  send: (params, printFrame) => {\r\n    // Append iframe element to document body\r\n    document.getElementsByTagName('body')[0].appendChild(printFrame)\r\n\r\n    // Get iframe element\r\n    const iframeElement = document.getElementById(params.frameId)\r\n\r\n    // Wait for iframe to load all content\r\n    iframeElement.onload = () => {\r\n      if (params.type === 'pdf') {\r\n        performPrint(iframeElement, params)\r\n        return\r\n      }\r\n\r\n      // Get iframe element document\r\n      let printDocument = (iframeElement.contentWindow || iframeElement.contentDocument)\r\n      if (printDocument.document) printDocument = printDocument.document\r\n\r\n      // Append printable element to the iframe body\r\n      printDocument.body.appendChild(params.printableElement)\r\n\r\n      params.onHtmlLoad(printDocument);\r\n\r\n      // Add custom style\r\n      if (params.type !== 'pdf' && params.style) {\r\n        // Create style element\r\n        const style = document.createElement('style')\r\n        style.innerHTML = params.style\r\n\r\n        // Append style element to iframe's head\r\n        printDocument.head.appendChild(style)\r\n      }\r\n\r\n      // If printing images, wait for them to load inside the iframe\r\n      const images = printDocument.getElementsByTagName('img')\r\n\r\n      if (images.length > 0) {\r\n        loadIframeImages(images).then(() => performPrint(iframeElement, params))\r\n      } else {\r\n        performPrint(iframeElement, params)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction performPrint (iframeElement, params) {\r\n  try {\r\n    iframeElement.focus()\r\n\r\n    // If Edge or IE, try catch with execCommand\r\n    if (Browser.isEdge() || Browser.isIE()) {\r\n      try {\r\n        iframeElement.contentWindow.document.execCommand('print', false, null)\r\n      } catch (e) {\r\n        iframeElement.contentWindow.print()\r\n      }\r\n    } else {\r\n      // Other browsers\r\n      iframeElement.contentWindow.print()\r\n    }\r\n  } catch (error) {\r\n    params.onError(error)\r\n  } finally {\r\n    cleanUp(params)\r\n  }\r\n}\r\n\r\nfunction loadIframeImages (images) {\r\n  const promises = images.map(image => {\r\n    if (image.src && image.src !== window.location.href) {\r\n      return loadIframeImage(image)\r\n    }\r\n  })\r\n\r\n  return Promise.all(promises)\r\n}\r\n\r\nfunction loadIframeImage (image) {\r\n  return new Promise(resolve => {\r\n    const pollImage = () => {\r\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete\r\n        ? setTimeout(pollImage, 500)\r\n        : resolve()\r\n    }\r\n    pollImage()\r\n  })\r\n}\r\n\r\nexport default Print\r\n","import Print from './print'\r\nimport { cleanUp } from './functions'\r\n\r\nexport default {\r\n  print: (params, printFrame) => {\r\n    // Check if we have base64 data\r\n    if (params.base64) {\r\n      const bytesArray = Uint8Array.from(atob(params.printable), c => c.charCodeAt(0))\r\n      createBlobAndPrint(params, printFrame, bytesArray)\r\n      return\r\n    }\r\n\r\n    // Format pdf url\r\n    params.printable = /^(blob|http)/i.test(params.printable)\r\n      ? params.printable\r\n      : window.location.origin + (params.printable.charAt(0) !== '/' ? '/' + params.printable : params.printable)\r\n\r\n    // Get the file through a http request (Preload)\r\n    let req = new window.XMLHttpRequest()\r\n    req.responseType = 'arraybuffer'\r\n\r\n    req.addEventListener('load', () => {\r\n      // Check for errors\r\n      if ([200, 201].indexOf(req.status) === -1) {\r\n        cleanUp(params)\r\n        params.onError(req.statusText)\r\n\r\n        // Since we don't have a pdf document available, we will stop the print job\r\n        return\r\n      }\r\n\r\n      // Print requested document\r\n      createBlobAndPrint(params, printFrame, req.response)\r\n    })\r\n\r\n    req.open('GET', params.printable, true)\r\n    req.send()\r\n  }\r\n}\r\n\r\nfunction createBlobAndPrint (params, printFrame, data) {\r\n  // Pass response or base64 data to a blob and create a local object url\r\n  let localPdf = new window.Blob([data], { type: 'application/pdf' })\r\n  localPdf = window.URL.createObjectURL(localPdf)\r\n\r\n  // Set iframe src with pdf document url\r\n  printFrame.setAttribute('src', localPdf)\r\n\r\n  Print.send(params, printFrame)\r\n}\r\n","import { collectStyles, addHeader } from './functions'\r\nimport Print from './print'\r\n\r\nexport default {\r\n  print: (params, printFrame) => {\r\n    // Get the DOM printable element\r\n    let printElement = document.getElementById(params.printable)\r\n\r\n    // Check if the element exists\r\n    if (!printElement) {\r\n      window.console.error('Invalid HTML element id: ' + params.printable)\r\n      return\r\n    }\r\n\r\n    // Clone the target element including its children (if available)\r\n    params.printableElement = cloneElement(printElement, params)\r\n\r\n    // Add header\r\n    if (params.header) {\r\n      addHeader(params.printableElement, params)\r\n    }\r\n\r\n    // Print html element contents\r\n    Print.send(params, printFrame)\r\n  }\r\n}\r\n\r\nfunction cloneElement (element, params) {\r\n  // Clone the main node (if not already inside the recursion process)\r\n  const clone = element.cloneNode()\r\n\r\n  // Loop over and process the children elements / nodes (including text nodes)\r\n  const childNodesArray = Array.prototype.slice.call(element.childNodes)\r\n  for (let i = 0; i < childNodesArray.length; i++) {\r\n    // Check if we are skiping the current element\r\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\r\n      continue\r\n    }\r\n\r\n    // Clone the child element\r\n    const clonedChild = cloneElement(childNodesArray[i], params)\r\n\r\n    // Attach the cloned child to the cloned parent node\r\n    clone.appendChild(clonedChild)\r\n  }\r\n\r\n  // Get all styling for print element (for nodes of type element only)\r\n  if (params.scanStyles && element.nodeType === 1) {\r\n    clone.setAttribute('style', collectStyles(element, params))\r\n  }\r\n\r\n  // Check if the element needs any state processing (copy user input data)\r\n  switch (element.tagName) {\r\n    case 'SELECT':\r\n      // Copy the current selection value to its clone\r\n      clone.value = element.value\r\n      break\r\n    case 'CANVAS':\r\n      // Copy the canvas content to its clone\r\n      clone.getContext('2d').drawImage(element, 0, 0)\r\n      break\r\n  }\r\n\r\n  return clone\r\n}\r\n","import Print from './print'\r\n\r\nexport default {\r\n  print: (params, printFrame) => {\r\n    // Create printable element (container)\r\n    params.printableElement = document.createElement('div')\r\n    params.printableElement.setAttribute('style', 'width:100%')\r\n\r\n    // Set our raw html as the printable element inner html content\r\n    params.printableElement.innerHTML = params.printable\r\n\r\n    // Print html contents\r\n    Print.send(params, printFrame)\r\n  }\r\n}\r\n","import { addHeader } from './functions'\r\nimport Print from './print'\r\n\r\nexport default {\r\n  print: (params, printFrame) => {\r\n    // Check if we are printing one image or multiple images\r\n    if (params.printable.constructor !== Array) {\r\n      // Create array with one image\r\n      params.printable = [params.printable]\r\n    }\r\n\r\n    // Create printable element (container)\r\n    params.printableElement = document.createElement('div')\r\n\r\n    // Create all image elements and append them to the printable container\r\n    params.printable.forEach(src => {\r\n      // Create the image element\r\n      let img = document.createElement('img')\r\n      img.setAttribute('style', params.imageStyle)\r\n\r\n      // Set image src with the file url\r\n      img.src = src\r\n\r\n      // Create the image wrapper\r\n      let imageWrapper = document.createElement('div')\r\n\r\n      // Append image to the wrapper element\r\n      imageWrapper.appendChild(img)\r\n\r\n      // Append wrapper to the printable element\r\n      params.printableElement.appendChild(imageWrapper)\r\n    })\r\n\r\n    // Check if we are adding a print header\r\n    if (params.header) addHeader(params.printableElement, params)\r\n\r\n    // Print image\r\n    Print.send(params, printFrame)\r\n  }\r\n}\r\n","import { capitalizePrint, addHeader } from './functions'\r\nimport Print from './print'\r\n\r\nexport default {\r\n  print: (params, printFrame) => {\r\n    // Check if we received proper data\r\n    if (typeof params.printable !== 'object') {\r\n      throw new Error('Invalid javascript data object (JSON).')\r\n    }\r\n\r\n    // Validate repeatTableHeader\r\n    if (typeof params.repeatTableHeader !== 'boolean') {\r\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).')\r\n    }\r\n\r\n    // Validate properties\r\n    if (!params.properties || !Array.isArray(params.properties)) {\r\n      throw new Error('Invalid properties array for your JSON data.')\r\n    }\r\n\r\n    // We will format the property objects to keep the JSON api compatible with older releases\r\n    params.properties = params.properties.map(property => {\r\n      return {\r\n        field: typeof property === 'object' ? property.field : property,\r\n        displayName: typeof property === 'object' ? property.displayName : property,\r\n        columnSize: typeof property === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\r\n      }\r\n    })\r\n\r\n    // Create a print container element\r\n    params.printableElement = document.createElement('div')\r\n\r\n    // Check if we are adding a print header\r\n    if (params.header) {\r\n      addHeader(params.printableElement, params)\r\n    }\r\n\r\n    // Build the printable html data\r\n    params.printableElement.innerHTML += jsonToHTML(params)\r\n\r\n    // Print the json data\r\n    Print.send(params, printFrame)\r\n  }\r\n}\r\n\r\nfunction jsonToHTML (params) {\r\n  // Get the row and column data\r\n  let data = params.printable\r\n  let properties = params.properties\r\n\r\n  // Create a html table\r\n  let htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'\r\n\r\n  // Check if the header should be repeated\r\n  if (params.repeatTableHeader) {\r\n    htmlData += '<thead>'\r\n  }\r\n\r\n  // Add the table header row\r\n  htmlData += '<tr>'\r\n\r\n  // Add the table header columns\r\n  for (let a = 0; a < properties.length; a++) {\r\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + capitalizePrint(properties[a].displayName) + '</th>'\r\n  }\r\n\r\n  // Add the closing tag for the table header row\r\n  htmlData += '</tr>'\r\n\r\n  // If the table header is marked as repeated, add the closing tag\r\n  if (params.repeatTableHeader) {\r\n    htmlData += '</thead>'\r\n  }\r\n\r\n  // Create the table body\r\n  htmlData += '<tbody>'\r\n\r\n  // Add the table data rows\r\n  for (let i = 0; i < data.length; i++) {\r\n    // Add the row starting tag\r\n    htmlData += '<tr>'\r\n\r\n    // Print selected properties only\r\n    for (let n = 0; n < properties.length; n++) {\r\n      let stringData = data[i]\r\n\r\n      // Support nested objects\r\n      let property = properties[n].field.split('.')\r\n      if (property.length > 1) {\r\n        for (let p = 0; p < property.length; p++) {\r\n          stringData = stringData[property[p]]\r\n        }\r\n      } else {\r\n        stringData = stringData[properties[n].field]\r\n      }\r\n\r\n      // Add the row contents and styles\r\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>'\r\n    }\r\n\r\n    // Add the row closing tag\r\n    htmlData += '</tr>'\r\n  }\r\n\r\n  // Add the table and body closing tags\r\n  htmlData += '</tbody></table>'\r\n\r\n  return htmlData\r\n}\r\n","'use strict'\r\n\r\nimport Browser from './browser'\r\nimport Modal from './modal'\r\nimport Pdf from './pdf'\r\nimport Html from './html'\r\nimport RawHtml from './raw-html'\r\nimport Image from './image'\r\nimport Json from './json'\r\n\r\nconst printTypes = ['pdf', 'html', 'image', 'json', 'raw-html']\r\n\r\nexport default {\r\n  init () {\r\n    let params = {\r\n      printable: null,\r\n      fallbackPrintable: null,\r\n      type: 'pdf',\r\n      header: null,\r\n      headerStyle: 'font-weight: 300;',\r\n      maxWidth: 800,\r\n      font: 'TimesNewRoman',\r\n      font_size: '12pt',\r\n      honorMarginPadding: true,\r\n      honorColor: false,\r\n      properties: null,\r\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\r\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\r\n      showModal: false,\r\n      onHtmlLoad: (printDocument) => { },\r\n      onError: (error) => { throw error },\r\n      onLoadingStart: null,\r\n      onLoadingEnd: null,\r\n      onPrintDialogClose: null,\r\n      onPdfOpen: null,\r\n      onBrowserIncompatible: () => true,\r\n      modalMessage: 'Retrieving Document...',\r\n      frameId: 'printJS',\r\n      printableElement: null,\r\n      documentTitle: 'Document',\r\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\r\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\r\n      ignoreElements: [],\r\n      imageStyle: 'max-width: 100%;',\r\n      repeatTableHeader: true,\r\n      css: null,\r\n      style: null,\r\n      scanStyles: true,\r\n      base64: false\r\n    }\r\n\r\n    // Check if a printable document or object was supplied\r\n    let args = arguments[0]\r\n    if (args === undefined) throw new Error('printJS expects at least 1 attribute.')\r\n\r\n    // Process parameters\r\n    switch (typeof args) {\r\n      case 'string':\r\n        params.printable = encodeURI(args)\r\n        params.fallbackPrintable = params.printable\r\n        params.type = arguments[1] || params.type\r\n        break\r\n      case 'object':\r\n        params.printable = args.printable\r\n        params.base64 = typeof args.base64 !== 'undefined'\r\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : params.printable\r\n        params.fallbackPrintable = params.base64 ? `data:application/pdf;base64,${params.fallbackPrintable}` : params.fallbackPrintable\r\n        for (var k in params) {\r\n          if (k === 'printable' || k === 'fallbackPrintable' || k === 'base64') continue\r\n\r\n          params[k] = typeof args[k] !== 'undefined' ? args[k] : params[k]\r\n        }\r\n        break\r\n      default:\r\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + typeof args)\r\n    }\r\n\r\n    // Validate printable\r\n    if (!params.printable) throw new Error('Missing printable information.')\r\n\r\n    // Validate type\r\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase()) === -1) {\r\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.')\r\n    }\r\n\r\n    // Check if we are showing a feedback message to the user (useful for large files)\r\n    if (params.showModal) Modal.show(params)\r\n\r\n    // Check for a print start hook function\r\n    if (params.onLoadingStart) params.onLoadingStart()\r\n\r\n    // To prevent duplication and issues, remove any used printFrame from the DOM\r\n    let usedFrame = document.getElementById(params.frameId)\r\n\r\n    if (usedFrame) usedFrame.parentNode.removeChild(usedFrame)\r\n\r\n    // Create a new iframe or embed element (IE prints blank pdf's if we use iframe)\r\n    let printFrame\r\n\r\n    // Create iframe element\r\n    printFrame = document.createElement('iframe')\r\n\r\n    // Hide iframe\r\n    printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute;')\r\n\r\n    // Set iframe element id\r\n    printFrame.setAttribute('id', params.frameId)\r\n\r\n    // For non pdf printing, pass an html document string to srcdoc (force onload callback)\r\n    if (params.type !== 'pdf') {\r\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'\r\n\r\n      // Attach css files\r\n      if (params.css) {\r\n        // Add support for single file\r\n        if (!Array.isArray(params.css)) params.css = [params.css]\r\n\r\n        // Create link tags for each css file\r\n        params.css.forEach(file => {\r\n          printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">'\r\n        })\r\n      }\r\n\r\n      printFrame.srcdoc += '</head><body></body></html>'\r\n    }\r\n\r\n    // Check printable type\r\n    switch (params.type) {\r\n      case 'pdf':\r\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\r\n        if (Browser.isFirefox() || Browser.isEdge() || Browser.isIE()) {\r\n          try {\r\n            console.info('PrintJS currently doesn\\'t support PDF printing in Firefox, Internet Explorer and Edge.')\r\n            if (params.onBrowserIncompatible() === true) {\r\n              let win = window.open(params.fallbackPrintable, '_blank')\r\n              win.focus()\r\n              if (params.onPdfOpen) params.onPdfOpen()\r\n            }\r\n          } catch (e) {\r\n            params.onError(e)\r\n          } finally {\r\n            // Make sure there is no loading modal opened\r\n            if (params.showModal) Modal.close()\r\n            if (params.onLoadingEnd) params.onLoadingEnd()\r\n          }\r\n        } else {\r\n          Pdf.print(params, printFrame)\r\n        }\r\n        break\r\n      case 'image':\r\n        Image.print(params, printFrame)\r\n        break\r\n      case 'html':\r\n        Html.print(params, printFrame)\r\n        break\r\n      case 'raw-html':\r\n        RawHtml.print(params, printFrame)\r\n        break\r\n      case 'json':\r\n        Json.print(params, printFrame)\r\n        break\r\n    }\r\n  }\r\n}\r\n","import './sass/index.scss'\r\nimport print from './js/init'\r\n\r\nconst printJS = print.init\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.printJS = printJS\r\n}\r\n\r\nexport default printJS\r\n"],"sourceRoot":""}